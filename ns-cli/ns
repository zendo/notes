#!/usr/bin/env bash

set -euo pipefail

dotConfig=$HOME/nsworld
# getUser=$(id -u -n)
getUser=$(loginctl --no-legend list-users | awk '{print $2;}')
getHost=$(uname -n)

# Check for sudo or doas
# suid() {
#   if [ -x "$(command -v sudo)" ]; then
#     sudo "$@"
#   else
#     doas "$@"
#   fi
# }

# Main
ns_usage() {
    cat <<EOF

Usage: $(basename "$0") [Options]

Options:
 boot switch upgrade diff
 os-profiles os-generations os-source os-installed
 pr-run pr-shell pr-pull git-sync-nixosVersion
 hmswitch hmsource hmprofiles hmdiff
EOF
}

# Check for arguments
if [ $# -eq 0 ]; then
    ns_usage
    exit 1
fi

while [[ $# -gt 0 ]]; do
    case "$1" in

        boot)
            nixos-rebuild --use-remote-sudo --flake "$dotConfig"#"$getHost" boot
            shift ;;

        switch)
            nixos-rebuild --use-remote-sudo --flake "$dotConfig"#"$getHost" switch
            shift ;;

        upgrade)
            cd "$dotConfig" || exit ; \
                nix flake update --commit-lock-file && \
                nixos-rebuild --use-remote-sudo --flake "$dotConfig"#"$getHost" boot
                shift ;;

        hmswitch)
            nix run nixpkgs#home-manager switch -- \
                --flake "$dotConfig"#"$getUser"
            shift ;;

        hmsource)
            readlink -f /nix/var/nix/profiles/per-user/"$getUser"/home-manager
            shift ;;

        hmprofiles)
            ls -la /nix/var/nix/profiles/per-user/"$getUser"
            shift ;;

        hmdiff)
            nix profile diff-closures --profile \
                ~/.local/state/nix/profiles/home-manager
            shift ;;

        diff)
            nix profile diff-closures --profile \
                /nix/var/nix/profiles/system
            shift ;;

        diff-commits)
            osrev=$(nixos-version --revision)
            nixpkgs=$(git ls-remote https://github.com/NixOS/nixpkgs refs/heads/nixos-unstable-small | awk '{print $1}')
            if [[ "$osrev" = "$nixpkgs" ]]; then
                echo "There is no update."
            else
                xdg-open https://github.com/NixOS/nixpkgs/compare/"$osrev"..."$nixpkgs"
            fi
            shift ;;

        os-source)
            readlink -f /nix/var/nix/profiles/system
            shift ;;

        os-installed)
            # cut -d- -f2-
            nix path-info --recursive /run/current-system | cut -b 45- | sort
            shift ;;

        os-profiles)
            ls -la /nix/var/nix/profiles
            shift ;;

        os-generations)
            nix profile history --profile /nix/var/nix/profiles/system
            shift ;;

        # git fetch upstream master && git rebase upstream/master
        git-sync-nixosVersion)
            git fetch upstream master && git merge "$(nixos-version --revision)"
            shift ;;

        pr-pull)
            git fetch git@github.com:NixOS/nixpkgs/ pull/"$2"/head:pr-"$2"; git checkout pr-"$2"
            # gh pr checkout -R NixOS/nixpkgs "$2"
            shift ;;

        pr-build)
            nix build github:NixOS/nixpkgs/pull/"$2"/merge#"$3"
            shift ;;

        hash2sri)
            nix hash convert --hash-algo sha256 --to sri "$2"
            shift ;;

        indexdb-update)
            filename="index-x86_64-$(uname | tr '[:upper:]' '[:lower:]')"
            mkdir -p ~/.cache/nix-index
            pushd ~/.cache/nix-index > /dev/null
            wget -q -N https://github.com/nix-community/nix-index-database/releases/latest/download/"$filename"
            ln -f "$filename" files
            popd > /dev/null
            ls -l ~/.cache/nix-index
            shift ;;

        *)
            # echo
            # echo "Error: Unknown option: $1" >&2
            shift ;;

    esac
done
